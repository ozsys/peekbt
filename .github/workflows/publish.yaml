name: publish

# ────────────────────────────────
# トリガー
#  • main ブランチへの push
#  • vX.Y.Z タグの push
# ────────────────────────────────
on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  # ────────────────────────────────
  # ① main ブランチへの push
  #    • 配布ファイル生成だけ行う
  # ────────────────────────────────
  publish-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Just をセットアップ
        uses: extractions/setup-just@v3
        with:
          just-version: '1.40.0'

      - name: 「latest」リリースがなければ作成
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release view latest || gh release create latest --draft

      - name: 配布ファイル生成 & アップロード
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just make_distribution_files
          just upload_assets latest

  # ────────────────────────────────
  # ② vX.Y.Z タグ push
  #    • Release 作成
  #    • 配布ファイル生成
  #    • Docker イメージビルド／プッシュ
  # ────────────────────────────────
  release-tag:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Version 抽出
        id: vars
        run: |
          echo "tag=${GITHUB_REF#refs/tags/v}" >>"$GITHUB_OUTPUT"

      - name: Release を作成
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.vars.outputs.tag }}
          release_name: Release v${{ steps.vars.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: チェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Just をセットアップ
        uses: extractions/setup-just@v3
        with:
          just-version: '1.40.0'

      - name: 配布ファイル生成 & アップロード
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          just make_distribution_files
          just upload_assets v${{ steps.vars.outputs.tag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: メタデータ抽出 (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/ozsys/peekbt
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=raw,value=${{ github.ref_name }}

      - name: GitHub Container Registry ログイン
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker イメージ build/push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/ozsys/peekbt:buildcache
          cache-to: type=registry,ref=ghcr.io/ozsys/peekbt:buildcache,mode=max
